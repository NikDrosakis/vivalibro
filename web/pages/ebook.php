<?php 
if($G['name']!='') {
$dirs = array_filter(glob("../pdf/".$G['name']."/*"));
}
$folders = array_filter(glob("../pdf/*"), 'is_dir');
?>

<div style="width:100%;display: grid;clear: both;margin-top: 100px;">
<?php if(!empty($folders)){
foreach($folders as $order => $dir){
?>
 	<div id="nodorder1_undefined" style="<?=basename($dir)==$G['name'] ? 'border: 5px solid darkred;':''?>" class="folder">
	<button type="button" class="close" aria-label="delete" id="delundefined">
	<span aria-hidden="true">Ã—</span></button>
	<div class="cardleft">
	<a style="font-size:16px" class="ebook_title" href="/ebook?name=<?=basename($dir)?>" style="color:#000000"><?=basename($dir)?></a>
	<div style="margin-top: 15px;"><a href="/editor?id=undefined"></a></div></div>
	</div>
<?php } } ?>
</div>
<div id="pdfList"></div>
<script>
  // List of PDF files generated by PHP
  const pdfFiles = <?php echo json_encode($dirs); ?>;

  pdfFiles.forEach(pdfFile => {
    fetch(pdfFile)
      .then(response => response.arrayBuffer())
      .then(buffer => {
        const typedarray = new Uint8Array(buffer);
        pdfjsLib.getDocument(typedarray).promise.then(pdf => {
          console.log(pdf);
          // Extract metadata
          pdf.getMetadata().then(data => {
            console.log(data)
            const metadata = data.info;
            const title = metadata.Title || 'Unknown Title';
            const author = metadata.Author || 'Unknown Author';
            const subject = metadata.Subject || 'Unknown Subject';
            const producer = metadata.Producer || 'Unknown Producer';
            const file = pdfFile.split('/')[2] || 'Unknown Producer';
            const folder = G.name || 'Unknown Folder';

            // Generate thumbnail of the first page
            pdf.getPage(1).then(page => {
              const scale = 0.3;
              const viewport = page.getViewport({ scale: scale });
              const canvas = document.createElement('canvas');
              const context = canvas.getContext('2d');
              canvas.height = viewport.height;
              canvas.width = viewport.width;

              const renderContext = {
                canvasContext: context,
                viewport: viewport
              };

              page.render(renderContext).promise.then(() => {
                const pdfList = document.getElementById('pdfList');
                const div = document.createElement('div');
              //  div.id = `nodorder`;
                div.className = `card`;
                div.innerHTML = `	<div class="cardleft">
	<div><a href="/writer?id=undefined"></a>${author}</div>
	<button class="ebook_title" id="openPopup" name="${folder}" style="color:#000000" file="${file}">${title}
	<div style="margin-top: 5px;"><a href="/editor?id=undefined"></a></div><div class="tag2">${subject}</div><div class="tag3">${producer}</div></div></button>`;
                div.appendChild(canvas);
                pdfList.appendChild(div);
              });
            });
          });
        });
      })
      .catch(error => console.error('Error fetching or processing PDF:', error));
  });
</script>
<div id="ebookPopup" class="popup">
  <div class="popup-content">
    <span id="closePopup" class="close">&times;</span>
    <canvas id="pdfCanvas"></canvas>
    <div class="navigation">
      <button id="prevPage">Previous</button>
      <span id="pageNum"></span> / <span id="pageCount"></span>
      <button id="nextPage">Next</button>
    </div>
  </div>
</div>

<script src="/js/ebook.js"></script>